**제이쿼리 : 자바스크립트 라이브러리 **
자바스크립트 코드를 간결한 상태로 개발이 가능


**제이쿼리 특징**

1. css 셀렉터
html내의 엘리먼트들을 손쉽게 표현 및 사용이 가능

2. 플러그인 아키텍처
이미 개발된 많은 플러그인을 쉽고 빠르게 사용

3. 메소드 체인
여러 개의 기능을 한 줄에 나열하여 불필요한 코드 반복을 줄임

4. 크로스 브라우저
브라우저별 발생 이벤트를 각각 지정해줄 필요가 없음

[example.1]
<form name=frm">
<input type="" name="nm" class="cls" id="box">
    
    -js
document.frm.nm
document.getElementById("box")

    -css,jq
input
.cls
#box

[example.3]
window.alert();
window.confirm();

>>> $(window).alert().confirm()

obj.property = "value" ;
obj.method(param, param, ...);

**적용 방법**
<script type="text/javascript" src="제이쿼리 문서 경로"></script>

1. local import
-파일을 다운로드 후 html 문서에 임포트
-js파일을 항상 같이 이동
-한국 서버에 있는 js파일을 다른 나라의 사용자가 접속하려 할 경우 속도 저하 발생 가능

2. CDN(Content Delivery Network)
-특정 웹 사이트에서 제공하고 있는 파일을 링크
-웹 사용 불가 시 스크립트 동작 안됨
-jquery.com / google.com / mircosoft.com

**다운로드**

j-Query Download
http://jquery.com

1.minified
-파일을 최소화 시키기 위해 불필요한 공백과 줄바꿈 생략
-일반적으로 사용

2.uncompressed
-코멘트등 포함
-코드 분석 시 사용

*selector($() 함수)

jquery(선택자),메소드()
$(선택자),메소드()

$(누구한테).어떤 효과를()
$(누구한테).어떤 효과를("")
$(누구한테).어떤 효과를({})
$(누구한테).어떤 효과를(function(){})

$(누구한테).어떤효과를().다른효과({}).다른효과(function(){})

[example]
document.getElementById("
document.querySelector("
>>>$(" css selector ")

*ready() 메소드
1. javascript의 window.onload 와 같은 기능이지만 이 기능보다 정확하게 동작
2. 스크립트가 먼저 작성되고 body 요소가 나중에 작성되기 때문에 스크립트 오류가 발생하는 것을 방지
3. 문서내에 한번만 선언
4. $(document).ready(function(){
    실행할 문장 전체
})

*Selector - Basic
1. $("element")
-특정 엘리먼트(태그) 지정
ex) $("tr").addClass("blue");

2. $("#id")
-특정 아이디 지정
ex) <a href="#" id="test">LINK</a>
$("#test").addClass("red");

3. $(".class")
-특정 클래스 지정
ex) <a href="#" class="test">LINK</a>
$(".test").addClass("blue");

4. $("selector1, selector2, selectorN")
-다중 선택자, 여러 개의 선택자에 동시에 효과 적용
ex)$("h2,h3,h4").addClass("pink");
$("h2,#test,.hidden").addClass("pink");


*** 제이쿼리 효과

** 기본효과

1. hide()
-지정된 요소를 감추기
-매개변수 없음
-$("대상").hide()

2. show()
-지정된 요소를 보이기
-매개변수 없음
-$("대상").show()

3. toggle()
-지정된 요소의 속성을 교차
-$("대상").toggle()

*slide 효과

1. slideDown
-미끄러지는 듯한 효과
-slideDown([duration][,complete])

2. duration(생략 가능)
-애니메이션이 진행되는 시간(기본값:400)
-String 타입 : "slow","fast"
-Number 타입 : 1/1000s

3. complete(생략 가능)
-function() 타입
-해당 대상이 효과를 완료했을 때 실행할 내용

4. slideUp
-slideUp([duration][,complete])
-slideDown과 사용 방법 동일

5. slideToggle
-지정된 요소의 slide 상태를 변경
-slideToggle([duration][,complete])

**페이드 효과

1. fadeIn
-대상을 서서히 나타나게
-fadeIn([duration][,complete])

2. duration(생략 가능)
-애니메이션이 진행되는 시간(기본값:400)
-String 타입 : "slow","fast"
-Number 타입 : 1/1000s

3. complete(생략 가능)
-function() 타입
-해당 대상이 효과를 완료했을 때 실행할 내용

4.fadeOut
-대상을 서서히 사라지게
-fadeIn과 사용방법 동일

5.fadeTo
-지정된 opacity 값까지 Fade
-$("대상").fadeTo(duartion, opacity[.complete])
-duration : fadeIn과 동일
-opacity : Number 타입, 0~1 사이의 값만 사용
-complete : fadeIn과 동일

6.fadeToggle
-지정된 대상의 opacity를 변경
-fadeToggle([duration][,erasing][,complete])

*animate효과

1.animate
-css로 제어 가능한 속성을 변화시키는 메소드
-animate(properties [,duration][,erasing][,complete])

2.properties
-css로 제어 가능한 속성과 값
-{} 사용하여 여러 속성 입력 가능

3. duration(생략 가능)
-애니메이션이 진행되는 시간(기본값:400)
-String 타입 : "slow","fast"
-Number 타입 : 1/1000s

4.erasing
-string타입
-가속효과(기본값:swing)

5. complete(생략 가능)
-function() 타입
-해당 대상이 효과를 완료했을 때 실행할 내용

-----------
1.인터랙션 효과 적용된 사이트 
-주소
-화면 캡쳐 후 동작 방식 작성
-또는 전/후 화면 캡처

2. 또는 인터랙션 설계서