react란?
 - 페이스북에서 만든 자바스크립트 UI 라이브러리
 - 컴포넌트(사용자 정의태그)를 사용하여 가독성 및 재사용성 향상
 : https://reactjs.org

리액트 애플리케이션 온라인 구현
 - codepen
 - codesandbox
 - stackblitz

툴 체인(Tool Chain)
 - 리액트 프로젝트 개발 시 목표에 따라 필요한 여러 가지 개발 환경 및 도구를 모아 한번에 제공하는 도구
 - Create React App : https://github.com/facebook/create-react-app

npm(Node Package Manager)설치
 - Node.js로 만들어진 프로그램을 쉽게 설치
 - 자바스크립트 프로그래밍 언어를 위한 패키지 관리자
 - 자바스크립트 런타임 환경 Node.js의 기본 패키지 관리자
 - 명령 줄 클라이언트(CLl), 공개 패키지, 지불 방식의 개인 패키지의 온라인 데이터베이스 ( npm 레지스트리)로 구성
 - Yarn을 대체하여 사용하기도 함

Create React App 설치
 : npm install -g create-react-app

맥 사용자 권한 거부(permission denied)시
 : sudo npm install -g create-react-app
 : 운영체제 로그인 비밀번호 입력
 : -g (global의 약자 : 컴퓨터 전체에서 사용)

설치 확인
 : create-react-app -V(대문자)

npx : 한 번만 설치 후 자동 삭제

개발 환경 준비하기!
 1. 개발에 사용할 디렉토리 생성 (디렉토리명으로 react 사용 불가)

 2. 터미널 또는 cmd에서 디렉토리 이동
 : cd 명령어 + 경로
 : cd 명령어 + 디렉토리를 콘솔로 드래그 앤 드롭

 3. 프로젝트 생성 명령 입력
 : create-react-app [프로젝트명]
 : create-react-app . (현재 디렉토리에 설치)

샘플 앱 실행
 - npm run start 또는 npm start : 자동 실행
 - 자동 실행되지 않는 경우 터미널에 출력된 주소를 Crtl(또는 Alt) 누른 채 클릭
----------------------------------------------------------
JSX(javscript XML)
    자바스크립트 코드 작성 시 따옴표 사용 등 까다로운 문접을 쉽게 작성
    페이스북에서 만든 언어
    JSX로 코드 작성 시 Create React App이 자바스크립트 코드로 변환

props
    html의 속성(attribute)
        https://reactjs.org/docs/components-and-props.html
        같은 태그(또는 컴포넌트)라도 다르게 사용 가능 - 재사용성 향상

state
    props
        부모 컴포넌트가 자식 컴포넌트에 값을 전달할 때 사용(읽기 전용)
    state
        컴포넌트 자신이 가지고 있는 값
        컴포넌트 내부의 동적 데이터
        변화가 필요한 경우 setState()함수 사용 => 데이터를 복제하여 덧붙이는 방법도 가능
            @리액트 대원칙 = 데이터 보존
        Constructur(생성자)
            state(컴포넌트 상태) 값을 초기화하거나 메서드를 바인딩 할 때 사용
            해당 컴포넌트가 마운트 되기 전 호출
        마운트
            DOM 객체가 생성되고 브라우저에 나타나는 것을 의미
        컴포넌트 라이프 사이클
            마운트 : DOM 객체 생성, 브라우저에 출력
            Update : props 값 변경, state 값 변경, 부모 컴포넌트 리 렌더링
            UnMount : 컴포넌트가 DOM에서 제거
----------------------------------------------------------
 state
    메서드 바인딩
        클래스와 메서드 간의 연관 관계
        클래스와 연관된 메서드는 클래스에 바인딩 간에
    super
        React.Component를 상속한 컴포넌트의 생성자를 구현할 때 다른 구문앞에 super(props)를 호출하지 않으면 this.props가 생성자 내에서 정의되지 않아 버그 발생
    javascript에서의 super
        부모 클래스 생성자
        constructor에서 super(props) 선언 전까지 this 사용 불가
            @setState는 값을 완전히 바꿔주므로 없어지지 않는 이상 data는 계속 바뀐 상태로 유지

이벤트 state props와 render 함수
    render 함수
        react에서는 props나 state가 변결될 때마다 해당되는 컴포넌트의 render 함수 및 하위 컴포넌트의 render함수 호출
    렌더링 테스트
        App.js / Subject.js / TOC.js / Content.js 파일에 콘솔로그 작성 후 페이지 실행
        [개발자 도구] - [콘솔] 탭에서 로그 확인
    이벤트 작성
        요소에 직접 핸들러 작성 후 함수 작성
        다른 컴포넌트에 있는 링크로 현재 컴포넌트의 제어 방식 다름(*)
        현재 컴포넌트에 링크 사용 이해 후 다른 컴포넌트의 링크 사용 실습
    javascript 이벤트 사용
        onclick = '함수명'
    react 이벤트 사용
        react 에서는 유사 html 사용(react 문법 준수)
        onClick={실행할 문장}
        이벤트 이름은 반드시 대문자 사용
    링크에 이벤트 적용
        페이지 새로고침
        리액트의 장점 - 새로고침 없이 페이지 처리
    해결방법
        이벤트를 실행한 객체(요소,태그)의 기본 동작을 제한
            @1. this가 동작하지 않아서 .bind(this)로 함수 바인딩
            @2. 수정할 때, state를 직접 들어갈 수 없어서 setState({key:value})로 작성
    bind 메소드
        bind() 메소드가 호출되면 새로운 함수를 생성
        받게되는 첫 인자의 value로는 this 키워드를 설정하고, 이어지는 인자들은 바인드된 함수의 인수에 제공

컴포넌트 이벤트
    onChangePage 이벤트 생성
        페이지가 바뀌었을 때 설치한 함수 호출
        props 형태로 다른 컴포넌트에 전달됨